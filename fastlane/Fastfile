require 'pathname'
require 'fileutils'

default_platform(:ios)

platform :ios do

  # 查找 podspec 文件路径
  def find_podspec_path
    # 读取所有 podspec 文件
    files = Dir.glob(["../*.podspec"])

    if files.empty?
      raise "Couldn't found podspec file."
    end

    return File.basename(files[0])
  end

  desc "release new version"
  lane :release do |options|

    # 获取源码 podspec 文件路径
    podspec_path = find_podspec_path()

    # 获取版本号
    target_version = version_get_podspec(path: podspec_path)

    #repo_source = "https://github.com/WZLYiOS/WZPodSpecs.git.git"
    repo_source = options[:r]

    # 验证 podspec
    pod_lib_lint(verbose: false,allow_warnings: true)
    
    # 设置 podspec 版本
    version_bump_podspec(
    	path: podspec_path,
    	version_number: target_version)

    # 获取 podspec 名称
    podspec_name = podspec_path.chomp(".podspec")

    # 所有需要提交的文件路径
    paths = [podspec_path]
    
    # 添加 podspec 和 framework
    git_add(path: paths)
    message = options[:message]

    if message.nil?
      message = "#{podspec_name} 发布 #{target_version} 版本"
     end

    # 提交 podspec 和 framework
    git_commit(path: paths, message: message)

    # 推送到远程
    push_to_git_remote

    
    # 添加标签
    if !git_tag_exists(tag: target_version)
      # 删除对应 tag
      add_git_tag tag: target_version
    end

    # 推送标签
    push_git_tags
    

    # 发布到 pod
    if repo_source
        pod_push(path: podspec_path, repo: target_repo, allow_warnings: true, verbose: true)
    else
       # pod trunk push 'spec_path'
       pod_push(path: podspec_path, allow_warnings: true, verbose: false)
    end

  end
end
